{"ast":null,"code":"var _jsxFileName = \"/home/fran/python-test-api/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cpf, setCpf] = useState(\"\");\n  const [status, setStatus] = useState(null);\n  const checkCpf = async () => {\n    if (!cpf.trim()) {\n      alert(\"Por favor, digite um CPF!\");\n      return;\n    }\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/${cpf}`);\n      setStatus(response.data.status);\n    } catch (error) {\n      setStatus(\"Erro na consulta\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verificador de CPF na Blacklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Digite o CPF\",\n      value: cpf,\n      onChange: e => setCpf(e.target.value),\n      style: {\n        padding: \"10px\",\n        marginRight: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkCpf,\n      style: {\n        padding: \"10px\"\n      },\n      children: \"Consultar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gtixVqhE0GYqMSYO3/IEuKcLwAk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","cpf","setCpf","status","setStatus","checkCpf","trim","alert","response","get","data","error","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","padding","marginRight","onClick","_c","$RefreshReg$"],"sources":["/home/fran/python-test-api/client/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst App: React.FC = () => {\n  const [cpf, setCpf] = useState(\"\");\n  const [status, setStatus] = useState<string | null>(null);\n\n  const checkCpf = async () => {\n    if (!cpf.trim()) {\n      alert(\"Por favor, digite um CPF!\");\n      return;\n    }\n\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/${cpf}`);\n      setStatus(response.data.status);\n    } catch (error) {\n      setStatus(\"Erro na consulta\");\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h2>Verificador de CPF na Blacklist</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Digite o CPF\"\n        value={cpf}\n        onChange={(e) => setCpf(e.target.value)}\n        style={{ padding: \"10px\", marginRight: \"10px\" }}\n      />\n      <button onClick={checkCpf} style={{ padding: \"10px\" }}>\n        Consultar\n      </button>\n      {status && <p>Status: {status}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAEzD,MAAMU,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,CAAC,EAAE;MACfC,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,yBAAyBR,GAAG,EAAE,CAAC;MAChEG,SAAS,CAACI,QAAQ,CAACE,IAAI,CAACP,MAAM,CAAC;IACjC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdP,SAAS,CAAC,kBAAkB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEN,OAAA;IAAKc,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDjB,OAAA;MAAAiB,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAErB,GAAI;MACXsB,QAAQ,EAAGC,CAAC,IAAKtB,MAAM,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCV,KAAK,EAAE;QAAEc,OAAO,EAAE,MAAM;QAAEC,WAAW,EAAE;MAAO;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFrB,OAAA;MAAQ8B,OAAO,EAAEvB,QAAS;MAACO,KAAK,EAAE;QAAEc,OAAO,EAAE;MAAO,CAAE;MAAAX,QAAA,EAAC;IAEvD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRhB,MAAM,iBAAIL,OAAA;MAAAiB,QAAA,GAAG,UAAQ,EAACZ,MAAM;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAACnB,EAAA,CAlCID,GAAa;AAAA8B,EAAA,GAAb9B,GAAa;AAoCnB,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}